<!DOCTYPE html>
<html lang="en">
  <%- include('../partials/head.ejs')%>
<body>
    <%- include('../partials/nav.ejs')%>
   

<!--content-->
    <div class="container" style="margin-top: 40px;">
      <form id="formOne">
        
        <label for="title">Blog Title:</label>
        <input type="text" id="title" name="title" required>
        <label for="snippet">Blog Subtitle:</label>
        <input type="text"  id="snippet" name="snippet" required>
        <label for="body">Blog body:</label>
        <textarea type="text" style="margin-top: 20px; height: 110px;" id="body" name="content" required></textarea>
        <div id="form" >
          <label>
            <input type="file" id="photo" name="photo">
            <span> Press the button to add an image to your blog: <br>
              <div class="btn-floating purple">
                <i class="material-icons" style="color: #f7eaf0;">add</i>
              </div> 
            </span>
          </label>
          <div class="output">
            <div class="valid"></div>
            <div class="error"></div>
          </div>
        </div>

      </form>
    </div>
     <br/><br/><br><br>
    
  <!--  Scripts-->
  <script type="module">
  import{signout,onAuthStateChanged,auth,projectStorage,ref,getDownloadURL,uploadBytesResumable} from '/fireConfig.js'

     //logout
const logout=document.querySelectorAll('.logout');
logout.addEventListener('click',()=>{
 signout().then(
          window.location.href='/'
        )
      
})

//ui authentication
      const loggedinLink=document.querySelectorAll('#logged-in')
      const loggedoutLink=document.querySelectorAll('#logged-out')

      const setupUI=(user)=>{
        if(user){

          loggedinLink.forEach(item=>item.style.display='block')
          loggedoutLink.forEach(item=>item.style.display='none')
        }else{
          loggedinLink.forEach(item=>item.style.display='none')
          loggedoutLink.forEach(item=>item.style.display='block')
        }
      }
 auth.onAuthStateChanged((user)=>{
     //going to controll what users see if logged in or out
     if(user){
       //console.log('user is logged in', user)
        setupUI(user)
     } else {
       //console.log('user is logged outer',user)
       setupUI()
     }
   })
 
//imageUpload
        const form=document.querySelector('#formOne');
        const photo=document.querySelector('#photo');
        const types=['image/png', 'image/jpeg']
        photo.addEventListener('change',(e)=>{
              let photoName=e.target.files[0];
                const li=document.querySelector('.error');
                const valid=document.querySelector('.valid');
                const error=`
                <p class="light red-text">Please select an image file(png or jpeg)<p>
                `
                const validFile= photoName.name;
              if(photoName && types.includes(photoName.type)){
                valid.innerHTML=validFile;
                  li.innerHTML=''
                  //uploading image to storage
                  const storageRef=ref(projectStorage,photoName.name);
                  const uploadTask = uploadBytesResumable(storageRef, photoName);
                  uploadTask.on('state_changed',
                   async()=>{
                           const url=await getDownloadURL(storageRef).then((url)=>{
                           
                            const blogTitle=form.title.value;
                            const blogSnippet=form.snippet.value;
                            const blogBody=form.content.value;
                            let photoName=form.photo.files[0];
                            const photoUrl=url;
                            
                            fetch('/blog',{
                            method:'POST',
                            headers:{
                              'Content-type':'application/json'
                            },
                            body:JSON.stringify({
                              title:blogTitle,
                              snippet:blogSnippet,
                              content:blogBody,
                              blogImage:photoUrl
                            })
                          })
                            //.then(response=>response.json())
                            //.then(data=>console.log(data))
                            //.catch(err=>console.log(err))
                            .then(()=>{
                              form.reset();
                              alert('WAIT A MOMENT!!')
                              window.location.href='/'
                            }).catch(()=>{
                              alert('AN ERROR OCCURRED ..BLOG NOT UPLOADED!!')
                            })
                           })

                           })
                           
                       
                }else{
                li.innerHTML=error;
                valid.innerHTML='';
              }
          })
         
  </script>
  <script src="./js/materialize.min.js"></script>
  <script src="./js/init.js" type="module"></script>
  <script src="/fireConfig.js" type="module"></script>
  </body>
</html>
